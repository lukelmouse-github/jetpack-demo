apply plugin: 'com.android.application'
apply plugin: 'therouter'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
android {
    namespace 'com.example.demo.jetpack'
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId "com.example.demo.jetpack"
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    NETWORK_SECURITY_CONFIG : "@xml/network_security_config_release"
            ]
        }
        debug {
            debuggable true
            manifestPlaceholders = [
                    NETWORK_SECURITY_CONFIG : "@xml/network_security_config_debug"
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    // 核心依赖 - 通过 core-common 获得所有公共依赖
    implementation project(":core-common")
    implementation project(":feature-home")
    implementation project(":feature-login")

    // 特定于 app 模块的依赖
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kapt 依赖需要在使用的模块中重新声明
    kapt "cn.therouter:apt:$the_router_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // 测试依赖
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}